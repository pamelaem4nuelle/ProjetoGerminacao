[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Uso de diferentes concentrações de extrato de tiririca na germinação de jambu",
    "section": "",
    "text": "Uso de diferentes concentrações de extrato de tiririca na germinação de jambu\nEsta página foi criado com o objetivo de disponibilizar os códigos do trabalho final da disciplina Análise e Visualização de Dados em Fitopatologia (FIP606), ofertada pelo Programa de Pós-Graduação em Fitopatologia da UFV e ministrada pelo professor Emerson Del Ponte.\nNeste projeto, foi analisada a germinação de sementes de jambu (Acmella oleracea) sob a influência de diferentes concentrações do extrato aquoso de tiririca (Cyperus rotundus). Foram aplicados cinco tratamentos de germinação: controle (0%), 5%, 10%, 25% e 50%. O experimento contou com oito repetições para cada tratamento, com delineamento inteiramente casualizado."
  },
  {
    "objectID": "arquivo1.html",
    "href": "arquivo1.html",
    "title": "Pré visualização",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(remotes)\nlibrary(rnaturalearthhires)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n✔ readr     2.1.5     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(ggthemes)"
  },
  {
    "objectID": "arquivo2.html",
    "href": "arquivo2.html",
    "title": "Análise Estatística",
    "section": "",
    "text": "##Visualização Ngerm\n{r} library(ggplot2)\ndados_a &lt;- dados |&gt; mutate(trat = as.numeric(trat))\ng1 &lt;- dados_a |&gt; ggplot(aes(trat, Ngerm)) + geom_jitter(width = 0.1, alpha = 0.2) + stat_summary(fun.data = “mean_cl_boot”, size = 0.5, color = “blue”) + scale_x_continuous(breaks = c(0, 5, 10, 25, 50)) + ylim(35, 55) + labs(x = “Concentração (%)”, y = “Sementes germinadas”) + theme_classic()\ng1\n##ANOVA Ngerm\n{r}\nm1 &lt;- lm(Ngerm~trat, data = dados) summary(m1)\nanova(m1)\nm1\\(residuals hist(m1\\)residuals)\nlibrary(emmeans) m1_medias &lt;- emmeans(m1, ~ trat) plot(m1_medias)\nlibrary(multcomp) cld(m1_medias)\nlibrary(performance) check_normality(m1) check_heteroscedasticity(m1)\nlibrary(DHARMa) plot(simulateResiduals(m1))\nshapiro.test(m1$residuals)\nbartlett.test(Ngerm~trat, data = dados)\n##Regressão Ngerm\n{r}\ndados2 &lt;- dados %&gt;% group_by(trat) %&gt;% summarise(Ngerm = mean(Ngerm)/50*100)\nquadratico &lt;- lm(Ngerm ~ poly(trat,2, raw = T), data = dados2)\nb &lt;- summary(quadratico)\nR2q &lt;- round(b$r.squared,2)\nB0q &lt;- round(quadratico$coefficients[1],4)\nB1q &lt;- round(quadratico$coefficients[2],4)\nB2q &lt;- round(quadratico$coefficients[3],4)\nequacao2 &lt;- paste(B2q,“x²”, “+”, “(”, B1q, “)”,“x”, “+”, B0q)\ngrafico2 &lt;- ggplot(data = dados2,aes(x = trat, y = Ngerm))+ geom_point() + geom_smooth(method = “lm”, formula = y ~ poly(x,2,raw = T)) + theme_classic() + annotate(geom = “text”, x = 35, y = 100, label = paste(“y =”, equacao2)) + annotate(geom = “text”, x = 25.5, y = 98, label = paste(“R² =”, R2q)) + scale_x_continuous(breaks = seq(0,50,5))+ labs(x = “Concentração (%)”, y = “Taxa de Germinação (%)”)\ngrafico2\nr &lt;- sqrt(R2q)\n##Visualização Nmort\n{r} library(ggplot2)\ndados_b &lt;- dados |&gt; mutate(trat = as.numeric(trat))\ng2 &lt;- dados_b |&gt; ggplot(aes(trat, Nmort)) + geom_jitter(width = 0.1, alpha = 0.2)+ stat_summary(fun.data = “mean_cl_boot”, size = 0.5, color = “blue”) + scale_x_continuous(breaks = c(0, 5, 10, 25, 50))+ ylim(0,15) + labs(x = “Concentração”, y = “Sementes mortas”)+ theme_classic() g2\n#ANOVA Nmort\n{r} m2 &lt;- lm(Nmort~trat, data = dados) summary(m2)\nanova(m2)\nm2\\(residuals hist(m2\\)residuals)\nlibrary(performance) check_normality(m2) check_heteroscedasticity(m2)\nlibrary(DHARMa) plot(simulateResiduals(m2))\nshapiro.test(m2$residuals)\nbartlett.test(Nmort~trat, data = dados)\n##Regressão Nmort\n{r} dados3 &lt;- dados %&gt;% group_by(trat) %&gt;% summarise(Nmort = mean(Nmort)/50*100)\nquadratico3 &lt;- lm(Nmort ~ poly(trat,2, raw = T), data = dados3)\nb &lt;- summary(quadratico3)\nR2q &lt;- round(b$r.squared,2)\nB0q &lt;- round(quadratico3$coefficients[1],2)\nB1q &lt;- round(quadratico3$coefficients[2],2)\nB2q &lt;- round(quadratico3$coefficients[3],4)\nequacao3 &lt;- paste(“(”, B2q, “)”, “x²”, “+”, B1q,“x”, “+”, B0q)\ngrafico3 &lt;- ggplot(data = dados3,aes(x = trat, y = Nmort))+ geom_point() + geom_smooth(method = “lm”, formula = y ~ poly(x,2,raw = T)) + theme_classic() + annotate(geom = “text”, x = 10, y = 25, label = paste(“y =”, equacao3)) + annotate(geom = “text”, x = 10, y = 23, label = paste(“R² =”, R2q))+ scale_x_continuous(breaks = seq(0,50,5))+ labs(x = “Concentração (%)”, y = “Taxa de Mortalidade (%)”)\ngrafico3\nr &lt;- sqrt(R2q)\n##Visualização IVG\n{r} library(ggplot2)\ndados_c &lt;- dados |&gt; mutate(trat = as.numeric(trat))\ng3 &lt;- dados_c |&gt; ggplot(aes(trat, IVG)) + geom_jitter(width = 0.1, alpha = 0.2)+ stat_summary(fun.data = “mean_cl_boot”, size = 0.5, color = “blue”) + scale_x_continuous(breaks = c(0, 5, 10, 25, 50))+ ylim(10,18) +\nlabs(x = “Concentração (%)”, y = “IVG (%)”)+ theme_classic() g3\n##ANOVA IVG\n{r} m3 &lt;- lm(IVG~trat, data = dados) summary(m3)\nanova(m3)\nm3\\(residuals hist(m3\\)residuals)\nlibrary(performance) check_normality(m3) check_heteroscedasticity(m3)\nlibrary(DHARMa) plot(simulateResiduals(m3))\nshapiro.test(m3$residuals)\nbartlett.test(IVG~trat, data = dados)\n##Regressão IVG\n{r} dados4 &lt;- dados %&gt;% group_by(trat) %&gt;% summarise(IVG = mean(IVG)) quadratico4 &lt;- lm(IVG ~ poly(trat,2, raw = T), data = dados4)\nb &lt;- summary(quadratico4)\nR2q &lt;- round(b$r.squared,2)\nB0q &lt;- round(quadratico4$coefficients[1],2)\nB1q &lt;- round(quadratico4$coefficients[2],2)\nB2q &lt;- round(quadratico4$coefficients[3],4)\nequacao4 &lt;- paste(B2q,“x²”, “+”, “(”, B1q, “)”,“x”, “+”, B0q)\ngrafico4 &lt;- ggplot(data = dados4,aes(x = trat, y = IVG))+ geom_point()+ geom_smooth(method = “lm”, formula = y ~ poly(x,2,raw = T)) + theme_classic() + annotate(geom = “text”, x = 35, y = 19, label = paste(“y =”, equacao4)) + annotate(geom = “text”, x = 35, y = 18, label = paste(“R² =”, R2q))+ scale_x_continuous(breaks = seq(0,50,5))+ labs(x = “Concentração (%)”, y = “IVG (%)”)\ngrafico4\nr &lt;- sqrt(R2q)\n##Visualização MS\n{r} library(ggplot2)\ndados_d &lt;- dados |&gt; mutate(trat = as.numeric(trat))\ng4 &lt;- dados_d |&gt; ggplot(aes(trat,MS )) + geom_jitter(width = 0.1, alpha = 0.2)+ stat_summary(fun.data = “mean_cl_boot”, size = 0.5, color = “blue”)+ scale_x_continuous(breaks = c(0, 5, 10, 25, 50))+ ylim(0,0.015) +\nlabs(x = “Concentração (%)”, y = “Massa Seca”)+ theme_classic() g4\n##ANOVA MS\n{r} m4 &lt;- lm(MS~trat, data = dados) summary(m4)\nanova(m4)\nm4\\(residuals hist(m4\\)residuals)\nlibrary(performance) check_normality(m4) check_heteroscedasticity(m4)\nlibrary(DHARMa) plot(simulateResiduals(m4))\nshapiro.test(m4$residuals)\nbartlett.test(MS~trat, data = dados)\n##Regressão MS\n{r}\ndados5 &lt;- dados %&gt;% group_by(trat) %&gt;% summarise(MS = mean(MS)) quadratico5 &lt;- lm(MS ~ poly(trat,2, raw = T), data = dados5)\nb &lt;- summary(quadratico5)\nR2q &lt;- round(b$r.squared,2)\nB0q &lt;- round(quadratico5$coefficients[1],4)\nB1q &lt;- round(quadratico5$coefficients[2],4)\nB2q &lt;- round(quadratico5$coefficients[3],6)\nequacao5 &lt;- paste(“(”, B2q, “)”, “x²”, “+”, B1q,“x”, “+”, B0q)\ngrafico5 &lt;- ggplot(data = dados5,aes(x = trat, y = MS))+ geom_point()+ geom_smooth(method = “lm”, formula = y ~ poly(x,2,raw = T)) + theme_classic() + annotate(geom = “text”, x = 35, y = 0.01, label = paste(“y =”, equacao5)) + annotate(geom = “text”, x = 35, y = 0.0095, label = paste(“R² =”, R2q))+ scale_x_continuous(breaks = seq(0,50,5))+ labs(x = “Concentração (%)”, y = “Massa Seca (g)”)\ngrafico5\nr &lt;- sqrt(R2q)"
  },
  {
    "objectID": "arquivo1.html#carregando-os-pacotes",
    "href": "arquivo1.html#carregando-os-pacotes",
    "title": "Pré visualização",
    "section": "",
    "text": "library(dplyr)\n\n\nAttaching package: 'dplyr'\n\n\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n\n\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n\nlibrary(ggplot2)\nlibrary(rnaturalearth)\nlibrary(remotes)\nlibrary(rnaturalearthhires)\nlibrary(tidyverse)\n\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ lubridate 1.9.3     ✔ tibble    3.2.1\n✔ purrr     1.0.2     ✔ tidyr     1.3.1\n✔ readr     2.1.5     \n\n\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (&lt;http://conflicted.r-lib.org/&gt;) to force all conflicts to become errors\n\nlibrary(ggplot2)\nlibrary(ggthemes)"
  },
  {
    "objectID": "arquivo1.html#carregando-os-dados",
    "href": "arquivo1.html#carregando-os-dados",
    "title": "Pré visualização",
    "section": "Carregando os dados",
    "text": "Carregando os dados\n\nlibrary(readxl)\n\ndados &lt;- read_excel(\"Dados.xlsx\")\n\n\nlibrary(readxl)\n\ndados1 &lt;- read_excel(\"Dados.xlsx\", sheet = 6)"
  },
  {
    "objectID": "arquivo1.html#localização-do-experimento",
    "href": "arquivo1.html#localização-do-experimento",
    "title": "Pré visualização",
    "section": "Localização do experimento",
    "text": "Localização do experimento\n\nBRA &lt;- ne_states(country = \"Brazil\", returnclass = \"sf\")\nPA &lt;- BRA |&gt;\n  filter(name_en == \"Pará\")\n\n\nstar &lt;- data.frame(\n  x = -48.5, \n  y = -1.45 \n)\n\nggplot(BRA) +\n  geom_sf(fill = \"white\", color = \"black\", linewidth = 0.5) +\n  geom_sf(data = PA, fill = \"red\") +\n  geom_point(data = star, aes(x = x, y = y), shape = 8, color = \"blue\", size = 5) +\n  theme_void()"
  },
  {
    "objectID": "arquivo1.html#visualização-da-germinação-ao-longo-dos-dias-após-a-montagem-do-ensaio",
    "href": "arquivo1.html#visualização-da-germinação-ao-longo-dos-dias-após-a-montagem-do-ensaio",
    "title": "Pré visualização",
    "section": "Visualização da germinação ao longo dos dias após a montagem do ensaio",
    "text": "Visualização da germinação ao longo dos dias após a montagem do ensaio\n\nmedia &lt;- dados1 |&gt;\n  group_by(Tratamento) |&gt;\n  summarise(Dia2=mean(Dia2), \n            Dia3=mean(Dia3),\n            Dia4=mean(Dia4),\n            Dia5=mean(Dia5),\n            Dia6=mean(Dia6),\n            Dia7=mean(Dia7),\n            Dia8=mean(Dia8),\n            Dia9=mean(Dia9))\nmedia2 &lt;- data.frame(Tratamento = rep(media$Tratamento, each = 8),\n                     Dia = rep(2:9,5),\n                     Variavel = rbind(t(media[1,2:9]),t(media[2,2:9]),                                  t(media[3,2:9]),t(media[4,2:9]),t(media[5,2:9])))\n\nmedia2$Tratamento &lt;- as.character(media2$Tratamento)\n\n\nggplot(data = media2, aes(x=Dia, y=Variavel)) +\n  geom_line(aes(group = Tratamento, color = Tratamento), size = 0.5) + \n  geom_point(aes(fill = Tratamento), shape = 21, alpha = 0.5, size = 3) + \n  scale_y_continuous(breaks = seq(10,100,10), limits = c(0,100)) + \n  scale_x_continuous(breaks = seq(2,9,1)) + \n  labs(x = \"Dias\", y = \"% Germinação\", title = \"Taxa de sementes germinadas ao longo dos dias\", color = \"Concentração\", fill = \"Concentração\") + \n  scale_color_discrete(limits = as.character(c(0, 5, 10, 25, 50))) + \n  scale_fill_discrete(limits = as.character(c(0, 5, 10, 25, 50))) +\n  theme_classic()\n\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead."
  },
  {
    "objectID": "arquivo1.html#gráfico-3d",
    "href": "arquivo1.html#gráfico-3d",
    "title": "Pré visualização",
    "section": "Gráfico 3D",
    "text": "Gráfico 3D\n\nlibrary(plotly)\n\n\nAttaching package: 'plotly'\n\n\nThe following object is masked from 'package:ggplot2':\n\n    last_plot\n\n\nThe following object is masked from 'package:stats':\n\n    filter\n\n\nThe following object is masked from 'package:graphics':\n\n    layout\n\nlibrary(dplyr) \n\nmedia2 &lt;- data.frame(\n  Tratamento = rep(dados1$Tratamento, each = 8),\n  Dia = rep(2:9, 5),\n  Variavel = rbind(t(media[1,2:9]), t(media[2,2:9]), t(media[3,2:9]), t(media[4,2:9]), t(media[5,2:9]))\n)\n\nWarning in data.frame(Tratamento = rep(dados1$Tratamento, each = 8), Dia =\nrep(2:9, : nomes de linhas foram encontrados em uma variável curta e foram\ndescartados\n\nmedia2$Tratamento &lt;- as.numeric(media2$Tratamento)\n\nmedia2 &lt;- media2 %&gt;%\n  group_by(Tratamento, Dia) %&gt;%\n  summarize(Variavel = mean(Variavel))\n\n`summarise()` has grouped output by 'Tratamento'. You can override using the\n`.groups` argument.\n\nplot_ly() %&gt;%\n  add_trace(data = media2[media2$Tratamento == 0, ], x = ~Tratamento, y = ~Dia, z = ~Variavel,\n            type = \"scatter3d\", mode = \"lines+markers\", color = I(\"#1f77b4\"), \n            legendgroup = \"Tratamento 1\", name = \"Concentração 0%\") %&gt;%\n  add_trace(data = media2[media2$Tratamento == 5, ], x = ~Tratamento, y = ~Dia, z = ~Variavel,\n            type = \"scatter3d\", mode = \"lines+markers\", color = I(\"#d62728\"), \n            legendgroup = \"Tratamento 2\", name = \"Concentração 5%\") %&gt;%\n  add_trace(data = media2[media2$Tratamento == 10, ], x = ~Tratamento, y = ~Dia, z = ~Variavel,\n            type = \"scatter3d\", mode = \"lines+markers\", color = I(\"#2ca02c\"), \n            legendgroup = \"Tratamento 3\", name = \"Concentração 10%\") %&gt;%\n  add_trace(data = media2[media2$Tratamento == 25, ], x = ~Tratamento, y = ~Dia, z = ~Variavel,\n            type = \"scatter3d\", mode = \"lines+markers\", color = I(\"purple\"), \n            legendgroup = \"Tratamento 4\", name = \"Concentração 25%\") %&gt;%\n  add_trace(data = media2[media2$Tratamento == 50, ], x = ~Tratamento, y = ~Dia, z = ~Variavel,\n            type = \"scatter3d\", mode = \"lines+markers\", color = I(\"orange\"), \n            legendgroup = \"Tratamento 5\", name = \"Concentração 50%\") %&gt;%\n  layout(scene = list(\n    xaxis = list(title = \"Concentração\"),\n    yaxis = list(title = \"Dias\"),\n    zaxis = list(title = \"%Germinação\")\n  ),\n  title = \"Número de sementes germinadas ao longo dos dias\")"
  }
]